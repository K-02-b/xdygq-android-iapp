fn 权限检查()
java(通知管理器,activity,"Context.getSystemService","String","notification")
java(sss.Yos_通知权限,通知管理器,"android.app.NotificationManager.areNotificationsEnabled")
end fn

fn notice(标题,内容,小图标,大图标,大图片,文本,通知ID,用户可否删除)
//初始化通知,添加通知前必须初始化
//大小图标需使用sbp()加载后传入,null为不显示图标
//通知ID,用于操作通知,发送多条通知需使用不同ID,不可null
//用户可否删除,true(可)或false(不可),传null默认为true(可)
//syso(大图标)
cls("android.app.Notification$Builder",通知类)
java(通知管理器,activity,"android.content.Context.getSystemService","String","notification")

javanew(通知渠道,"android.app.NotificationChannel","String","ExpandedNotification","CharSequence","新消息通知","int",4)
java(null,通知渠道,"android.app.NotificationChannel.enableLights", "boolean", true)
java(null,通知渠道,"android.app.NotificationChannel.setLockscreenVisibility", "int", 1)
java(null,通知渠道,"android.app.NotificationChannel.setLightColor", "int", -16776961)
java(null,通知渠道,"android.app.NotificationChannel.shouldShowLights")

java(null,通知管理器,"android.app.NotificationManager.createNotificationChannel","android.app.NotificationChannel",通知渠道)

javanew(通知,通知类,"Context",activity,"String","ExpandedNotification")
java(null,通知,"android.app.Notification$Builder.setContentTitle","CharSequence",标题)
//java(null,通知,"android.app.Notification$Builder.setLightColor","int",4278190335)
java(null,通知,"android.app.Notification$Builder.setCategory","String","reminder")
java(null,通知,"android.app.Notification$Builder.setContentText","CharSequence",内容)
sr(用户可否删除,null,true,用户可否删除)
sr(用户可否删除,true,"Yos",用户可否删除)
sr(用户可否删除,false,true,用户可否删除)
sr(用户可否删除,"Yos",false,用户可否删除)
//java(null,通知,"android.app.Notification$Builder.setOngoing","boolean",用户可否删除)
//java(null,通知,"android.app.Notification$Builder.setDefaults","int",4)

f(大图片 != null)
{
  javanew(样式,"android.app.Notification$BigPictureStyle")
  java(大图片, 样式, "android.app.Notification$BigPictureStyle.bigPicture","android.graphics.Bitmap",大图片)
}
else
{
  javanew(样式,"android.app.Notification$BigTextStyle")
  java(文本a,样式,"android.app.Notification$BigTextStyle.bigText","CharSequence",文本)
}
java(null,通知,"android.app.Notification$Builder.setStyle","android.app.Notification$Style",样式)

f(小图标 != null)
{
  java(小图标,null,"android.graphics.drawable.Icon.createWithBitmap","android.graphics.Bitmap",小图标)
  java(null,通知,"android.app.Notification$Builder.setSmallIcon","android.graphics.drawable.Icon",小图标)
}
f(大图标 != null)
{
  java(大图标,null,"android.graphics.drawable.Icon.createWithBitmap","android.graphics.Bitmap",大图标)
  java(null,通知,"android.app.Notification$Builder.setLargeIcon","android.graphics.drawable.Icon",大图标)
  java(大图片, 样式, "android.app.Notification$BigPictureStyle.bigLargeIcon","android.graphics.Bitmap",null)
}
//syso(通知)
java(通知对象,通知,"android.app.Notification$Builder.build")
//syso(通知对象)
java(null,通知管理器,"android.app.NotificationManager.notify","int",通知ID,"android.app.Notification",通知对象)
//syso(通知管理器)
sss Yos_通知 = 通知
sss Yos_通知管理器 = 通知管理器
end fn

fn 更新进度(进度,通知ID)
f(sss.Yos_通知 == null || sss.Yos_通知管理器 == null)
{
  syso("错误：通知对象未初始化，请先发送一次通知")
  tw("错误：通知对象未初始化，请先发送一次通知",0)
  endcode
}
java(null,sss.Yos_通知,"android.app.Notification$Builder.setProgress","int",100,"int",进度,"boolean",false)
java(通知对象,sss.Yos_通知,"android.app.Notification$Builder.build")
java(null,sss.Yos_通知管理器,"android.app.NotificationManager.notify","int",通知ID,"android.app.Notification",通知对象)
end fn

fn 取消通知(通知ID)
f(sss.Yos_通知 == null || sss.Yos_通知管理器 == null)
{
  syso("错误：通知对象未初始化，请先发送一次通知")
  tw("错误：通知对象未初始化，请先发送一次通知",0)
  endcode
}
sj(通知ID,null,".",ID)
f(ID==null)
{
  s ID = 通知ID
}
java(null,sss.Yos_通知管理器,"android.app.NotificationManager.cancel","int",ID)
end fn